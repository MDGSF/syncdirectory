// Code generated by protoc-gen-go. DO NOT EDIT.
// source: syncdirectory.proto

/*
Package syncdirectory is a generated protocol buffer package.

It is generated from these files:
	syncdirectory.proto

It has these top-level messages:
	MInitDirectory
	MPushDirectory
	MPullDirectoryRequest
	MSyncDirectory
	MPushFile
	MPullFile
	MDeleteFile
	MMoveFile
*/
package syncdirectory

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ESyncMsgCode int32

const (
	ESyncMsgCode_EInitDirectory        ESyncMsgCode = 0
	ESyncMsgCode_EPushDirectory        ESyncMsgCode = 1
	ESyncMsgCode_EPullDirectoryRequest ESyncMsgCode = 2
	ESyncMsgCode_ESyncDirectoryRequest ESyncMsgCode = 3
	ESyncMsgCode_ESyncDirectory        ESyncMsgCode = 4
	ESyncMsgCode_EPushFile             ESyncMsgCode = 5
	ESyncMsgCode_EPullFile             ESyncMsgCode = 6
	ESyncMsgCode_EDeleteFile           ESyncMsgCode = 7
	ESyncMsgCode_EMoveFile             ESyncMsgCode = 8
)

var ESyncMsgCode_name = map[int32]string{
	0: "EInitDirectory",
	1: "EPushDirectory",
	2: "EPullDirectoryRequest",
	3: "ESyncDirectoryRequest",
	4: "ESyncDirectory",
	5: "EPushFile",
	6: "EPullFile",
	7: "EDeleteFile",
	8: "EMoveFile",
}
var ESyncMsgCode_value = map[string]int32{
	"EInitDirectory":        0,
	"EPushDirectory":        1,
	"EPullDirectoryRequest": 2,
	"ESyncDirectoryRequest": 3,
	"ESyncDirectory":        4,
	"EPushFile":             5,
	"EPullFile":             6,
	"EDeleteFile":           7,
	"EMoveFile":             8,
}

func (x ESyncMsgCode) Enum() *ESyncMsgCode {
	p := new(ESyncMsgCode)
	*p = x
	return p
}
func (x ESyncMsgCode) String() string {
	return proto.EnumName(ESyncMsgCode_name, int32(x))
}
func (x *ESyncMsgCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESyncMsgCode_value, data, "ESyncMsgCode")
	if err != nil {
		return err
	}
	*x = ESyncMsgCode(value)
	return nil
}
func (ESyncMsgCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MInitDirectory struct {
	Root             *string `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MInitDirectory) Reset()                    { *m = MInitDirectory{} }
func (m *MInitDirectory) String() string            { return proto.CompactTextString(m) }
func (*MInitDirectory) ProtoMessage()               {}
func (*MInitDirectory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MInitDirectory) GetRoot() string {
	if m != nil && m.Root != nil {
		return *m.Root
	}
	return ""
}

type MPushDirectory struct {
	Root             *string  `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	Dirname          *string  `protobuf:"bytes,2,opt,name=dirname" json:"dirname,omitempty"`
	Subdirname       []string `protobuf:"bytes,3,rep,name=subdirname" json:"subdirname,omitempty"`
	Subfilename      []string `protobuf:"bytes,4,rep,name=subfilename" json:"subfilename,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MPushDirectory) Reset()                    { *m = MPushDirectory{} }
func (m *MPushDirectory) String() string            { return proto.CompactTextString(m) }
func (*MPushDirectory) ProtoMessage()               {}
func (*MPushDirectory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MPushDirectory) GetRoot() string {
	if m != nil && m.Root != nil {
		return *m.Root
	}
	return ""
}

func (m *MPushDirectory) GetDirname() string {
	if m != nil && m.Dirname != nil {
		return *m.Dirname
	}
	return ""
}

func (m *MPushDirectory) GetSubdirname() []string {
	if m != nil {
		return m.Subdirname
	}
	return nil
}

func (m *MPushDirectory) GetSubfilename() []string {
	if m != nil {
		return m.Subfilename
	}
	return nil
}

type MPullDirectoryRequest struct {
	Root             *string `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MPullDirectoryRequest) Reset()                    { *m = MPullDirectoryRequest{} }
func (m *MPullDirectoryRequest) String() string            { return proto.CompactTextString(m) }
func (*MPullDirectoryRequest) ProtoMessage()               {}
func (*MPullDirectoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MPullDirectoryRequest) GetRoot() string {
	if m != nil && m.Root != nil {
		return *m.Root
	}
	return ""
}

type MSyncDirectory struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MSyncDirectory) Reset()                    { *m = MSyncDirectory{} }
func (m *MSyncDirectory) String() string            { return proto.CompactTextString(m) }
func (*MSyncDirectory) ProtoMessage()               {}
func (*MSyncDirectory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type MPushFile struct {
	Root             *string `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	FileName         *string `protobuf:"bytes,2,opt,name=fileName" json:"fileName,omitempty"`
	FileSize         *int64  `protobuf:"varint,3,opt,name=fileSize" json:"fileSize,omitempty"`
	RelativePath     *string `protobuf:"bytes,4,opt,name=RelativePath" json:"RelativePath,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MPushFile) Reset()                    { *m = MPushFile{} }
func (m *MPushFile) String() string            { return proto.CompactTextString(m) }
func (*MPushFile) ProtoMessage()               {}
func (*MPushFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MPushFile) GetRoot() string {
	if m != nil && m.Root != nil {
		return *m.Root
	}
	return ""
}

func (m *MPushFile) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

func (m *MPushFile) GetFileSize() int64 {
	if m != nil && m.FileSize != nil {
		return *m.FileSize
	}
	return 0
}

func (m *MPushFile) GetRelativePath() string {
	if m != nil && m.RelativePath != nil {
		return *m.RelativePath
	}
	return ""
}

type MPullFile struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MPullFile) Reset()                    { *m = MPullFile{} }
func (m *MPullFile) String() string            { return proto.CompactTextString(m) }
func (*MPullFile) ProtoMessage()               {}
func (*MPullFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type MDeleteFile struct {
	Root                 *string `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	RelativeFileWithPath *string `protobuf:"bytes,2,opt,name=relativeFileWithPath" json:"relativeFileWithPath,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *MDeleteFile) Reset()                    { *m = MDeleteFile{} }
func (m *MDeleteFile) String() string            { return proto.CompactTextString(m) }
func (*MDeleteFile) ProtoMessage()               {}
func (*MDeleteFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *MDeleteFile) GetRoot() string {
	if m != nil && m.Root != nil {
		return *m.Root
	}
	return ""
}

func (m *MDeleteFile) GetRelativeFileWithPath() string {
	if m != nil && m.RelativeFileWithPath != nil {
		return *m.RelativeFileWithPath
	}
	return ""
}

type MMoveFile struct {
	Root             *string `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	OldFileWithPath  *string `protobuf:"bytes,2,opt,name=oldFileWithPath" json:"oldFileWithPath,omitempty"`
	NewFileWithPath  *string `protobuf:"bytes,3,opt,name=newFileWithPath" json:"newFileWithPath,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MMoveFile) Reset()                    { *m = MMoveFile{} }
func (m *MMoveFile) String() string            { return proto.CompactTextString(m) }
func (*MMoveFile) ProtoMessage()               {}
func (*MMoveFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *MMoveFile) GetRoot() string {
	if m != nil && m.Root != nil {
		return *m.Root
	}
	return ""
}

func (m *MMoveFile) GetOldFileWithPath() string {
	if m != nil && m.OldFileWithPath != nil {
		return *m.OldFileWithPath
	}
	return ""
}

func (m *MMoveFile) GetNewFileWithPath() string {
	if m != nil && m.NewFileWithPath != nil {
		return *m.NewFileWithPath
	}
	return ""
}

func init() {
	proto.RegisterType((*MInitDirectory)(nil), "syncdirectory.MInitDirectory")
	proto.RegisterType((*MPushDirectory)(nil), "syncdirectory.MPushDirectory")
	proto.RegisterType((*MPullDirectoryRequest)(nil), "syncdirectory.MPullDirectoryRequest")
	proto.RegisterType((*MSyncDirectory)(nil), "syncdirectory.MSyncDirectory")
	proto.RegisterType((*MPushFile)(nil), "syncdirectory.MPushFile")
	proto.RegisterType((*MPullFile)(nil), "syncdirectory.MPullFile")
	proto.RegisterType((*MDeleteFile)(nil), "syncdirectory.MDeleteFile")
	proto.RegisterType((*MMoveFile)(nil), "syncdirectory.MMoveFile")
	proto.RegisterEnum("syncdirectory.ESyncMsgCode", ESyncMsgCode_name, ESyncMsgCode_value)
}

func init() { proto.RegisterFile("syncdirectory.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xd1, 0x4e, 0xfa, 0x30,
	0x14, 0xc6, 0xff, 0x63, 0xfb, 0x0b, 0x3b, 0x83, 0xd1, 0x54, 0x49, 0xa6, 0x17, 0x86, 0x34, 0x5e,
	0x2c, 0x9a, 0x78, 0xe1, 0x2b, 0xc8, 0x4c, 0xbc, 0xa8, 0x21, 0x23, 0xc6, 0x6b, 0x60, 0x55, 0x9a,
	0xd4, 0x55, 0xb7, 0x0e, 0x83, 0xde, 0xf8, 0x64, 0x3e, 0x9b, 0x59, 0x61, 0x83, 0x92, 0xe1, 0xdd,
	0xce, 0xef, 0xfb, 0x7a, 0xce, 0xb7, 0xd3, 0xc2, 0x71, 0xbe, 0x4a, 0xe7, 0x09, 0xcf, 0xd8, 0x5c,
	0xc9, 0x6c, 0x75, 0xfd, 0x96, 0x49, 0x25, 0x71, 0xcf, 0x80, 0xe4, 0x02, 0x7c, 0x7a, 0x9f, 0x72,
	0x35, 0xaa, 0x08, 0xc6, 0xe0, 0x64, 0x52, 0xaa, 0xc0, 0x1a, 0x5a, 0xa1, 0x1b, 0xeb, 0x6f, 0xf2,
	0x6d, 0x81, 0x4f, 0xc7, 0x45, 0xbe, 0xf8, 0xd3, 0x86, 0x03, 0x68, 0x27, 0x3c, 0x4b, 0xa7, 0xaf,
	0x2c, 0x68, 0x69, 0x5c, 0x95, 0xf8, 0x1c, 0x20, 0x2f, 0x66, 0x95, 0x68, 0x0f, 0xed, 0xd0, 0x8d,
	0x77, 0x08, 0x1e, 0x82, 0x97, 0x17, 0xb3, 0x67, 0x2e, 0x98, 0x36, 0x38, 0xda, 0xb0, 0x8b, 0xc8,
	0x15, 0x0c, 0xe8, 0xb8, 0x10, 0xa2, 0x4e, 0x10, 0xb3, 0xf7, 0x82, 0xe5, 0xaa, 0x31, 0x2f, 0x02,
	0x9f, 0x4e, 0x56, 0xe9, 0xbc, 0x36, 0x93, 0x2f, 0x70, 0xf5, 0x0f, 0xdc, 0x71, 0xc1, 0x1a, 0xb3,
	0x9f, 0x41, 0xa7, 0x9c, 0xf5, 0xb0, 0x0d, 0x5f, 0xd7, 0x95, 0x36, 0xe1, 0x9f, 0x65, 0x76, 0x2b,
	0xb4, 0xe3, 0xba, 0xc6, 0x04, 0xba, 0x31, 0x13, 0x53, 0xc5, 0x97, 0x6c, 0x3c, 0x55, 0x8b, 0xc0,
	0xd1, 0x67, 0x0d, 0x46, 0x3c, 0x3d, 0x5c, 0x88, 0x72, 0x38, 0x79, 0x04, 0x8f, 0x8e, 0x98, 0x60,
	0x8a, 0x1d, 0xcc, 0x72, 0x03, 0x27, 0xd9, 0xe6, 0x7c, 0xe9, 0x79, 0xe2, 0x6a, 0xa1, 0x7b, 0xaf,
	0x73, 0x35, 0x6a, 0x24, 0x07, 0x97, 0x52, 0xb9, 0x3c, 0xdc, 0x34, 0x84, 0xbe, 0x14, 0x49, 0x43,
	0xbf, 0x7d, 0x5c, 0x3a, 0x53, 0xf6, 0x61, 0x38, 0xed, 0xb5, 0x73, 0x0f, 0x5f, 0xfe, 0x58, 0xd0,
	0x8d, 0xca, 0x45, 0xd3, 0xfc, 0xe5, 0x56, 0x26, 0xe5, 0x60, 0x3f, 0x32, 0x9e, 0x13, 0xfa, 0xa7,
	0x99, 0xf1, 0x76, 0x90, 0x85, 0x4f, 0x61, 0x10, 0x35, 0xdd, 0x26, 0x6a, 0x69, 0xc9, 0xb8, 0xbb,
	0x4a, 0xb2, 0x75, 0x27, 0x43, 0x42, 0x0e, 0xee, 0x81, 0x1b, 0x55, 0x17, 0x8b, 0xfe, 0x6f, 0xca,
	0xf5, 0xaa, 0xd1, 0x11, 0xee, 0x83, 0x17, 0x6d, 0x97, 0x8d, 0xda, 0x5a, 0xaf, 0xd6, 0x84, 0x3a,
	0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xde, 0x77, 0xb2, 0x4a, 0x23, 0x03, 0x00, 0x00,
}
