// Code generated by protoc-gen-go. DO NOT EDIT.
// source: syncdirectory.proto

/*
Package syncdirectory is a generated protocol buffer package.

It is generated from these files:
	syncdirectory.proto

It has these top-level messages:
	MInitDirectory
	MPushDirectory
	MPullDirectory
	MSyncDirectory
	MPushFile
	MPullFile
	MDeleteFile
	MMoveFile
*/
package syncdirectory

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ESyncMsgCode int32

const (
	ESyncMsgCode_EInitDirectory ESyncMsgCode = 0
	ESyncMsgCode_EPushDirectory ESyncMsgCode = 1
	ESyncMsgCode_EPullDirectory ESyncMsgCode = 2
	ESyncMsgCode_ESyncDirectory ESyncMsgCode = 3
	ESyncMsgCode_EPushFile      ESyncMsgCode = 4
	ESyncMsgCode_EPullFile      ESyncMsgCode = 5
	ESyncMsgCode_EDeleteFile    ESyncMsgCode = 6
	ESyncMsgCode_EMoveFile      ESyncMsgCode = 7
)

var ESyncMsgCode_name = map[int32]string{
	0: "EInitDirectory",
	1: "EPushDirectory",
	2: "EPullDirectory",
	3: "ESyncDirectory",
	4: "EPushFile",
	5: "EPullFile",
	6: "EDeleteFile",
	7: "EMoveFile",
}
var ESyncMsgCode_value = map[string]int32{
	"EInitDirectory": 0,
	"EPushDirectory": 1,
	"EPullDirectory": 2,
	"ESyncDirectory": 3,
	"EPushFile":      4,
	"EPullFile":      5,
	"EDeleteFile":    6,
	"EMoveFile":      7,
}

func (x ESyncMsgCode) Enum() *ESyncMsgCode {
	p := new(ESyncMsgCode)
	*p = x
	return p
}
func (x ESyncMsgCode) String() string {
	return proto.EnumName(ESyncMsgCode_name, int32(x))
}
func (x *ESyncMsgCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESyncMsgCode_value, data, "ESyncMsgCode")
	if err != nil {
		return err
	}
	*x = ESyncMsgCode(value)
	return nil
}
func (ESyncMsgCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MInitDirectory struct {
	Root             *string `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MInitDirectory) Reset()                    { *m = MInitDirectory{} }
func (m *MInitDirectory) String() string            { return proto.CompactTextString(m) }
func (*MInitDirectory) ProtoMessage()               {}
func (*MInitDirectory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MInitDirectory) GetRoot() string {
	if m != nil && m.Root != nil {
		return *m.Root
	}
	return ""
}

type MPushDirectory struct {
	Root             *string  `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	Dirname          *string  `protobuf:"bytes,2,opt,name=dirname" json:"dirname,omitempty"`
	Subdirname       []string `protobuf:"bytes,3,rep,name=subdirname" json:"subdirname,omitempty"`
	Subfilename      []string `protobuf:"bytes,4,rep,name=subfilename" json:"subfilename,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MPushDirectory) Reset()                    { *m = MPushDirectory{} }
func (m *MPushDirectory) String() string            { return proto.CompactTextString(m) }
func (*MPushDirectory) ProtoMessage()               {}
func (*MPushDirectory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MPushDirectory) GetRoot() string {
	if m != nil && m.Root != nil {
		return *m.Root
	}
	return ""
}

func (m *MPushDirectory) GetDirname() string {
	if m != nil && m.Dirname != nil {
		return *m.Dirname
	}
	return ""
}

func (m *MPushDirectory) GetSubdirname() []string {
	if m != nil {
		return m.Subdirname
	}
	return nil
}

func (m *MPushDirectory) GetSubfilename() []string {
	if m != nil {
		return m.Subfilename
	}
	return nil
}

type MPullDirectory struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MPullDirectory) Reset()                    { *m = MPullDirectory{} }
func (m *MPullDirectory) String() string            { return proto.CompactTextString(m) }
func (*MPullDirectory) ProtoMessage()               {}
func (*MPullDirectory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type MSyncDirectory struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MSyncDirectory) Reset()                    { *m = MSyncDirectory{} }
func (m *MSyncDirectory) String() string            { return proto.CompactTextString(m) }
func (*MSyncDirectory) ProtoMessage()               {}
func (*MSyncDirectory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type MPushFile struct {
	Root                 *string `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	FileName             *string `protobuf:"bytes,2,opt,name=fileName" json:"fileName,omitempty"`
	FileSize             *int64  `protobuf:"varint,3,opt,name=fileSize" json:"fileSize,omitempty"`
	FileDir              *string `protobuf:"bytes,4,opt,name=fileDir" json:"fileDir,omitempty"`
	RelativeFileWithPath *string `protobuf:"bytes,5,opt,name=relativeFileWithPath" json:"relativeFileWithPath,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *MPushFile) Reset()                    { *m = MPushFile{} }
func (m *MPushFile) String() string            { return proto.CompactTextString(m) }
func (*MPushFile) ProtoMessage()               {}
func (*MPushFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MPushFile) GetRoot() string {
	if m != nil && m.Root != nil {
		return *m.Root
	}
	return ""
}

func (m *MPushFile) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

func (m *MPushFile) GetFileSize() int64 {
	if m != nil && m.FileSize != nil {
		return *m.FileSize
	}
	return 0
}

func (m *MPushFile) GetFileDir() string {
	if m != nil && m.FileDir != nil {
		return *m.FileDir
	}
	return ""
}

func (m *MPushFile) GetRelativeFileWithPath() string {
	if m != nil && m.RelativeFileWithPath != nil {
		return *m.RelativeFileWithPath
	}
	return ""
}

type MPullFile struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MPullFile) Reset()                    { *m = MPullFile{} }
func (m *MPullFile) String() string            { return proto.CompactTextString(m) }
func (*MPullFile) ProtoMessage()               {}
func (*MPullFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type MDeleteFile struct {
	Root                 *string `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	RelativeFileWithPath *string `protobuf:"bytes,2,opt,name=relativeFileWithPath" json:"relativeFileWithPath,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *MDeleteFile) Reset()                    { *m = MDeleteFile{} }
func (m *MDeleteFile) String() string            { return proto.CompactTextString(m) }
func (*MDeleteFile) ProtoMessage()               {}
func (*MDeleteFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *MDeleteFile) GetRoot() string {
	if m != nil && m.Root != nil {
		return *m.Root
	}
	return ""
}

func (m *MDeleteFile) GetRelativeFileWithPath() string {
	if m != nil && m.RelativeFileWithPath != nil {
		return *m.RelativeFileWithPath
	}
	return ""
}

type MMoveFile struct {
	Root             *string `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	OldFileWithPath  *string `protobuf:"bytes,2,opt,name=oldFileWithPath" json:"oldFileWithPath,omitempty"`
	NewFileWithPath  *string `protobuf:"bytes,3,opt,name=newFileWithPath" json:"newFileWithPath,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MMoveFile) Reset()                    { *m = MMoveFile{} }
func (m *MMoveFile) String() string            { return proto.CompactTextString(m) }
func (*MMoveFile) ProtoMessage()               {}
func (*MMoveFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *MMoveFile) GetRoot() string {
	if m != nil && m.Root != nil {
		return *m.Root
	}
	return ""
}

func (m *MMoveFile) GetOldFileWithPath() string {
	if m != nil && m.OldFileWithPath != nil {
		return *m.OldFileWithPath
	}
	return ""
}

func (m *MMoveFile) GetNewFileWithPath() string {
	if m != nil && m.NewFileWithPath != nil {
		return *m.NewFileWithPath
	}
	return ""
}

func init() {
	proto.RegisterType((*MInitDirectory)(nil), "syncdirectory.MInitDirectory")
	proto.RegisterType((*MPushDirectory)(nil), "syncdirectory.MPushDirectory")
	proto.RegisterType((*MPullDirectory)(nil), "syncdirectory.MPullDirectory")
	proto.RegisterType((*MSyncDirectory)(nil), "syncdirectory.MSyncDirectory")
	proto.RegisterType((*MPushFile)(nil), "syncdirectory.MPushFile")
	proto.RegisterType((*MPullFile)(nil), "syncdirectory.MPullFile")
	proto.RegisterType((*MDeleteFile)(nil), "syncdirectory.MDeleteFile")
	proto.RegisterType((*MMoveFile)(nil), "syncdirectory.MMoveFile")
	proto.RegisterEnum("syncdirectory.ESyncMsgCode", ESyncMsgCode_name, ESyncMsgCode_value)
}

func init() { proto.RegisterFile("syncdirectory.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x41, 0x4f, 0xc2, 0x30,
	0x14, 0xc7, 0x2d, 0x1b, 0xe2, 0xde, 0x04, 0x9a, 0xea, 0x61, 0xf1, 0x60, 0xc8, 0xe2, 0x61, 0xf1,
	0xe0, 0xc1, 0xaf, 0x20, 0x33, 0xf1, 0x30, 0x43, 0x20, 0xc6, 0x33, 0xb0, 0x2a, 0x4d, 0xea, 0x6a,
	0xba, 0x82, 0xc1, 0x93, 0x1f, 0xc4, 0xab, 0xdf, 0xd3, 0xf4, 0x41, 0x81, 0x11, 0xc6, 0xad, 0xff,
	0xdf, 0xfb, 0xa7, 0xef, 0xdf, 0xf7, 0x0a, 0x17, 0xe5, 0xb2, 0x98, 0xe6, 0x42, 0xf3, 0xa9, 0x51,
	0x7a, 0x79, 0xf7, 0xa9, 0x95, 0x51, 0xac, 0x5d, 0x81, 0xf1, 0x0d, 0x74, 0xb2, 0xa7, 0x42, 0x98,
	0xbe, 0x23, 0x8c, 0x81, 0xaf, 0x95, 0x32, 0x11, 0xe9, 0x91, 0x24, 0x18, 0xe2, 0x39, 0xfe, 0x21,
	0xd0, 0xc9, 0x06, 0xf3, 0x72, 0x76, 0xd4, 0xc6, 0x22, 0x68, 0xe5, 0x42, 0x17, 0xe3, 0x0f, 0x1e,
	0x35, 0x10, 0x3b, 0xc9, 0xae, 0x01, 0xca, 0xf9, 0xc4, 0x15, 0xbd, 0x9e, 0x97, 0x04, 0xc3, 0x1d,
	0xc2, 0x7a, 0x10, 0x96, 0xf3, 0xc9, 0x9b, 0x90, 0x1c, 0x0d, 0x3e, 0x1a, 0x76, 0x51, 0x4c, 0x31,
	0x81, 0x94, 0x9b, 0x04, 0x48, 0x46, 0xcb, 0x62, 0xba, 0x25, 0x7f, 0x04, 0x02, 0x8c, 0xf9, 0x28,
	0x24, 0x3f, 0x98, 0xf0, 0x0a, 0xce, 0xec, 0x8d, 0xcf, 0xdb, 0x88, 0x1b, 0xed, 0x6a, 0x23, 0xf1,
	0x6d, 0x13, 0x92, 0xc4, 0x1b, 0x6e, 0xb4, 0x7d, 0x99, 0x3d, 0xf7, 0x85, 0x8e, 0xfc, 0xd5, 0xcb,
	0xd6, 0x92, 0xdd, 0xc3, 0xa5, 0xe6, 0x72, 0x6c, 0xc4, 0x82, 0xdb, 0xae, 0xaf, 0xc2, 0xcc, 0x06,
	0x63, 0x33, 0x8b, 0x9a, 0x68, 0x3b, 0x58, 0x8b, 0x43, 0x8c, 0x29, 0xa5, 0x85, 0xf1, 0x0b, 0x84,
	0x59, 0x9f, 0x4b, 0x6e, 0x78, 0x6d, 0xea, 0xba, 0x1e, 0x8d, 0x23, 0x3d, 0x4a, 0x08, 0xb2, 0x4c,
	0x2d, 0xea, 0x2f, 0x4d, 0xa0, 0xab, 0x64, 0x7e, 0xe0, 0xbe, 0x7d, 0x6c, 0x9d, 0x05, 0xff, 0xaa,
	0x38, 0xbd, 0x95, 0x73, 0x0f, 0xdf, 0xfe, 0x12, 0x38, 0x4f, 0xed, 0x4e, 0xb2, 0xf2, 0xfd, 0x41,
	0xe5, 0xb6, 0x71, 0x27, 0xad, 0x7c, 0x2f, 0x7a, 0x82, 0xac, 0xf2, 0x97, 0x28, 0x59, 0xb3, 0x9d,
	0xed, 0xd2, 0x06, 0xb2, 0xca, 0x7e, 0xa9, 0xc7, 0xda, 0x10, 0xa4, 0x6e, 0xc1, 0xd4, 0x5f, 0xcb,
	0xd5, 0x20, 0x69, 0x93, 0x75, 0x21, 0x4c, 0xb7, 0xa3, 0xa4, 0xa7, 0x58, 0x77, 0x43, 0xa0, 0xad,
	0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x74, 0x7a, 0x1d, 0x58, 0x11, 0x03, 0x00, 0x00,
}
